import { NextResponse } from 'next/server'
import prisma from '@/lib/prisma'
import { getCurrentUser } from '@/lib/auth'
import { awardBadge } from '@/lib/badges/award'

export const runtime = 'nodejs'
export const dynamic = 'force-dynamic'

export async function POST(req: Request) {
  const user = await getCurrentUser()
  if (!user)
    return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })

  const { subject, grade, xp = 10 } = await req.json().catch(() => ({}))
  if (!subject || !grade) {
    return NextResponse.json(
      { error: 'subject et grade requis' },
      { status: 400 },
    )
  }

  // Assure un enregistrement de progress
  const rec = await prisma.userProgress.upsert({
    where: { userId_subject_grade: { userId: user.id, subject, grade } as any },
    update: { xp: { increment: Number(xp) || 0 } },
    create: {
      userId: user.id,
      subject,
      grade,
      xp: Number(xp) || 0,
      badgesJson: '[]',
    },
  })

  // Badge "première leçon" (si tu veux l'utiliser: ajoute-le à la table Badge)
  try {
    await awardBadge(user.id, 'first_lesson')
  } catch {}

  return NextResponse.json(rec)
}
