import { NextResponse } from 'next/server'
import { cookies } from 'next/headers'
import prisma from '@/lib/prisma'
import { getCurrentUser } from '@/lib/auth'

export const runtime = 'nodejs'
export const dynamic = 'force-dynamic'

export async function POST(req: Request) {
  const { mode } = await req.json().catch(() => ({ mode: 'normal' }))
  const safe = ['normal', 'tdah', 'dys', 'tsa', 'hpi']
  const value = safe.includes(mode) ? mode : 'normal'

  // Cookie côté client (utilisé par l'UI)
  const jar = await cookies()
  jar.set('learningMode', value, { path: '/', maxAge: 60 * 60 * 24 * 365 })

  // Optionnel : persister la préférence
  try {
    const user = await getCurrentUser()
    if (user) {
      await prisma.userPreference.upsert({
        where: { userId: user.id },
        update: { modeKey: value },
        create: { userId: user.id, modeKey: value },
      })
    }
  } catch {}
  return NextResponse.json({ ok: true, mode: value })
}
